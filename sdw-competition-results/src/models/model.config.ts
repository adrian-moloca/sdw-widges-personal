import { EntityType, IConfigurationProps } from 'models';
import { t } from 'i18next';

const useModelDefinition = () => {
  const data: IConfigurationProps = {
    [EntityType.Competition]: {
      type: EntityType.Competition,
      display: t('general.competition'),
      displayPlural: t('general.competitions'),
      entityName: 'Competition',
      apiNode: '/competitions',
      path: 'explorer/competitions',
      displayAccessor: 'title',
    },
    [EntityType.Event]: {
      type: EntityType.Event,
      display: t('general.event'),
      displayPlural: t('general.events'),
      entityName: 'Event',
      apiNode: '/events',
      path: 'explorer/events',
      displayAccessor: 'title',
      parentPath: '/explorer/disciplines',
    },
    [EntityType.Stage]: {
      type: EntityType.Stage,
      display: t('general.stage'),
      displayPlural: t('general.stages'),
      entityName: 'Stage',
      apiNode: '/stages',
      path: 'explorer/stages',
      displayAccessor: 'title',
      parentPath: '/explorer/events',
    },
    [EntityType.Phase]: {
      type: EntityType.Phase,
      display: t('general.phase'),
      displayPlural: t('general.phases'),
      entityName: 'Phase',
      apiNode: '/phases',
      path: 'explorer/phases',
      displayAccessor: 'title',
      parentPath: '/explorer/stages',
    },
    [EntityType.Unit]: {
      type: EntityType.Unit,
      display: t('general.unit'),
      displayPlural: t('general.units'),
      entityName: 'Unit',
      apiNode: '/units',
      path: 'explorer/units',
      displayAccessor: 'title',
      parentPath: '/explorer/phases',
    },
    [EntityType.SubUnit]: {
      type: EntityType.SubUnit,
      display: t('general.subunit'),
      displayPlural: t('general.subunits'),
      entityName: 'SubUnit',
      apiNode: '/subunits',
      path: 'explorer/subunits',
      displayAccessor: 'title',
      parentPath: '/explorer/units',
    },
    [EntityType.Person]: {
      type: EntityType.Person,
      display: t('general.person'),
      displayPlural: t('general.persons'),
      entityName: 'Person',
      apiNode: '/persons',
      path: 'explorer/persons',
      displayAccessor: 'displayName',
    },
    [EntityType.Horse]: {
      type: EntityType.Horse,
      display: t('general.horse'),
      displayPlural: t('general.horses'),
      entityName: 'Horse',
      apiNode: '/horses',
      path: 'explorer/horses',
      displayAccessor: 'name',
    },
    [EntityType.Team]: {
      type: EntityType.Team,
      display: t('general.team'),
      displayPlural: t('general.teams'),
      entityName: 'Team',
      apiNode: '/teams',
      path: 'explorer/teams',
      displayAccessor: 'name',
    },
    [EntityType.Record]: {
      type: EntityType.Record,
      display: t('general.record'),
      displayPlural: t('general.records'),
      entityName: 'Record',
      apiNode: '/records',
      path: 'explorer/records',
      displayAccessor: 'name',
      parentPath: '/explorer/competitors',
    },
    [EntityType.Award]: {
      type: EntityType.Award,
      display: t('general.award'),
      displayPlural: t('general.awards'),
      entityName: 'Award',
      apiNode: '/award',
      path: 'explorer/awards',
      displayAccessor: 'class',
      parentPath: '/explorer/competitors',
    },
    [EntityType.Organization]: {
      type: EntityType.Organization,
      display: t('general.organisation'),
      displayPlural: t('general.organisations'),
      entityName: 'Organization',
      apiNode: '/organisations',
      path: 'explorer/organisations',
      displayAccessor: 'name',
    },
    [EntityType.Noc]: {
      type: EntityType.Noc,
      display: t('general.noc'),
      displayPlural: t('general.nocs'),
      entityName: 'Noc',
      apiNode: '/nocs',
      path: 'explorer/nocs',
      displayAccessor: 'name',
    },
    [EntityType.Venue]: {
      type: EntityType.Venue,
      display: t('general.venue'),
      displayPlural: t('general.venues'),
      entityName: 'Venue',
      apiNode: '/venues',
      path: 'explorer/venues',
      displayAccessor: 'name',
    },
    [EntityType.Discipline]: {
      type: EntityType.Discipline,
      display: t('general.discipline'),
      displayPlural: t('general.disciplines'),
      entityName: 'Discipline',
      apiNode: '/disciplines',
      path: 'explorer/disciplines',
      displayAccessor: 'title',
      parentPath: '/explorer/competitions',
    },
    [EntityType.Participant]: {
      type: EntityType.Participant,
      display: t('general.participants'),
      displayPlural: t('general.participants'),
      entityName: 'Participant',
      apiNode: '/participants',
      path: 'explorer/participants',
      displayAccessor: 'participationName',
    },
    [EntityType.Competitor]: {
      type: EntityType.Competitor,
      display: t('general.competitor'),
      displayPlural: t('general.competitors'),
      entityName: 'Competitor',
      apiNode: '/competitors',
      path: 'explorer/competitors',
      displayAccessor: 'participationName',
    },
    [EntityType.ParticipantCompetition]: {
      type: EntityType.ParticipantCompetition,
      display: t('general.competition'),
      displayPlural: t('general.competitions'),
      entityName: 'ParticipantCompetition',
      apiNode: '/competitions',
      path: 'explorer/competitions',
      displayAccessor: 'title',
    },
    [EntityType.Category]: {
      type: EntityType.Category,
      display: t('general.master_category'),
      displayPlural: t('general.master_categories'),
      entityName: 'MasterDataCategory',
      apiNode: '/v1/categories',
      path: 'tools/master/categories',
      displayAccessor: 'id',
    },
    [EntityType.Entry]: {
      type: EntityType.Entry,
      display: t('general.master_entry'),
      displayPlural: t('general.master_entries'),
      entityName: 'MasterDataEntry',
      apiNode: '/v1/entries/byCategoryKey',
      path: 'tools/master/entries',
      displayAccessor: 'value',
      parentPath: '/tools/master/categories',
    },
    [EntityType.Mapping]: {
      type: EntityType.Mapping,
      display: t('general.mapping'),
      displayPlural: t('general.mappings'),
      entityName: 'Mapping',
      apiNode: '/v1/mapping/to',
      path: 'tools/master/mappings',
      displayAccessor: 'value',
    },
    [EntityType.Translation]: {
      type: EntityType.Translation,
      display: t('general.translation'),
      displayPlural: t('general.translations'),
      entityName: 'Translation',
      apiNode: '/v1/translation/forEntry/byEntryKey',
      path: 'tools/master/translations',
      displayAccessor: 'value',
    },
    [EntityType.Result]: {
      type: EntityType.Result,
      display: t('general.result'),
      displayPlural: t('general.result'),
      entityName: 'results',
      apiNode: '/results',
      path: 'explorer/results',
      displayAccessor: 'value',
    },
    [EntityType.Official]: {
      type: EntityType.Official,
      display: t('general.officials'),
      displayPlural: t('general.officials'),
      entityName: 'Official',
      apiNode: '/officials',
      path: 'explorer/officials',
      displayAccessor: 'participationName',
    },
    [EntityType.ScheduleItem]: {
      type: EntityType.ScheduleItem,
      display: t('general.schedule'),
      displayPlural: t('general.schedules'),
      entityName: 'ScheduleItem',
      apiNode: '/extended/schedule-items',
      path: 'explorer/schedules',
      displayAccessor: 'title',
    },
  };
  return {
    modelConfig: data,
  };
};
export default useModelDefinition;
